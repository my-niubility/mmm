<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.1.xsd"
	default-lazy-init="false">

	<!-- Shiro filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro   securityManager -->  
	    <property name="securityManager" ref="securityManager"/>
	    <!-- check failure to login-->  
	    <property name="loginUrl" value="/index.jsp"/>
	    <property name="successUrl" value="/welcome"/>
	    <!-- auth check failure to  -->  
	    <property name="unauthorizedUrl" value="/unauthor"/>  
	    
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
				<entry key="jcaptcha" value-ref="jcaptchaFilter"/>
				<entry key="roles" value-ref="rolesAuthenticationFilter"/>
				<entry key="perms" value-ref="permsAuthenticationFilter"/>
				<entry key="usr" value-ref="userLoginFilter"/>
			</util:map>
		</property>
	    
	    
	    <!-- Shiro filter chains define -->  
	    <property name="filterChainDefinitions">  
	        <value>  
	             /css**=anon
	             /images**=anon
	             /js**=anon
	             /logincheck=jcaptcha,authc
	        </value>  
	    </property>
	</bean>  
	<!-- 
				/party/add=perms["partyManager:create"]
	             /party/**=usr
	 -->
	<bean id="formAuthenticationFilter" class="com.zlebank.myRealm.MyFormAuthenticationFilter">
		<property name="loginUrl" value="/logincheck"/>
	</bean>

	<bean id="rolesAuthenticationFilter" class="com.zlebank.myRealm.MyRolesAuthorizationFilter">
		<property name="loginUrl" value="/logincheck"/>
	</bean>

	<bean id="permsAuthenticationFilter" class="com.zlebank.myRealm.MyPermissionsAuthorizationFilter">
		<property name="loginUrl" value="/logincheck"/>
	</bean>

	<bean id="userLoginFilter" class="com.zlebank.myRealm.MyUserLoginFilter">
	</bean>
	
	<bean id="jcaptchaFilter" class="com.zlebank.utils.jcaptcha.JCaptchaValidateFilter">
	    <property name="jcaptchaEbabled" value="true"/>
        <property name="jcaptchaParam" value="jcaptchaCode"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
        <property name="loginUrl" value="/logincheck"/>
	</bean>
	
	
	<!-- shiro implements lifecycle-->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
	
	<!-- Shiro anonatation -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>  
  		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
  	  <property name="securityManager" ref="securityManager"/>  
    </bean>  
    
  	<bean id="myRealm" class="com.zlebank.myRealm.MyRealm"/>  
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
  	  <property name="realm" ref="myRealm"/>
  	  <property name="cacheManager" ref="ehCacheManager"/>
  	  <property name="sessionManager" ref="sessionManager"/>  
	</bean>  

	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:spring/shiro-ehcache.xml"/>
	</bean>
  	
  	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager">
  	</bean>
	
</beans>